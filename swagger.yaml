swagger: "2.0"
info:
  contact:
    email: info@kadena.io
    url: https://kadena.io
    name: Kadena LLC
  version: "1.0"
  title: Kadena Wallet Signing API
  license:
    name: BSD3
  description: |
    This API facilitates communication between dapps and wallets. This frees dapp developers from the complexity of managing private keys, allowing them to focus on the functionality and business logic of the application.
    Whenever the dapp needs to send a signed transaction, all you have to do is make an AJAX request to this API on localhost port 9467 and the user's wallet app will handle all the details of transaction signing for you.
host: localhost:9467
paths:
  /v1/sign:
    post:
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - required: true
          schema:
            $ref: '#/definitions/SigningRequest'
          in: body
          name: body
      responses:
        "400":
          description: Invalid `body`
        "200":
          schema:
            $ref: '#/definitions/SigningResponse'
          description: ""
  /v1/quicksign:
    post:
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - required: true
          schema:
            $ref: '#/definitions/QuickSignRequest'
          in: body
          name: body
      responses:
        "400":
          description: Invalid `body`
        "200":
          schema:
            $ref: '#/definitions/QuickSignResponse'
          description: ""
definitions:
  SigningResponse:
    description: wallet response that includes the signed transaction
    required:
      - body
      - chainId
    properties:
      body:
        $ref: '#/definitions/Command'
      chainId:
        $ref: '#/definitions/ChainId'
    type: object
  Command:
    description: transaction command with stringified JSON payload (cmd)
    required:
      - cmd
      - sigs
      - hash
    properties:
      cmd:
        type: string
      sigs:
        items:
          $ref: '#/definitions/UserSig'
        type: array
      hash:
        $ref: '#/definitions/TypedHash'
    type: object
  UserSig:
    description: crypto signature by secret key of command payload
    required:
      - sig
    properties:
      sig:
        type: string
    type: object
  TypedHash:
    description: blake2 hash in base64 of command payload
    maxLength: 32
    format: base64url
    minLength: 32
    type: string
  ChainId:
    description: chainweb chain ID where the transaction will be executed
    type: string
  SigningRequest:
    description: transaction information sent to the wallet for signing
    required:
      - code
      - caps
    properties:
      code:
        type: string
      data:
        $ref: '#/definitions/Object'
      caps:
        items:
          $ref: '#/definitions/DappCap'
        type: array
      nonce:
        type: string
      chainId:
        $ref: '#/definitions/ChainId'
      gasLimit:
        $ref: '#/definitions/GasLimit'
      ttl:
        $ref: '#/definitions/TTLSeconds'
      sender:
        $ref: '#/definitions/AccountName'
      extraSigners:
        items:
          $ref: '#/definitions/PublicKey'
        type: array
    type: object
  Object:
    description: Arbitrary JSON object.
    additionalProperties: true
    type: object
  DappCap:
    description: a capability required by the transaction with amplifying information to help the user
    required:
      - role
      - description
      - cap
    properties:
      role:
        type: string
      description:
        type: string
      cap:
        $ref: '#/definitions/SigCapability'
    type: object
  SigCapability:
    description: a capability and any arguments it requires
    required:
      - args
      - name
    properties:
      args:
        items:
          type: string
        type: array
      name:
        type: string
    example:
      args:
        - arg1
        - arg2
      name: foo.bar
    type: object
  GasLimit:
    description: max number of gas units you want to spend on this transaction
    type: number
  TTLSeconds:
    description: number of seconds the transaction can wait in the mempool before expiring
    type: number
  AccountName:
    description: The name of an account in the coin contract. In the SigningRequest sender field, this will be the account used to pay the transaction's gas price.
    type: string
  PublicKey:
    type: string
  QuickSignResponse:
    description: list of SigData
    required:
      - results
    properties:
      results:
        items:
          required:
            - sigs
            - cmd
          type: object
          properties:
            sigs:
              items:
                items:
                  type: string
                type: array
              type: array
            cmd:
              type: string
        type: array
    example:
      results:
        - sigs:
            - - acbe76b30ccaf57e269a0cd5eeeb7293e7e84c7d68e6244a64c4adf4d2df6ea1
              - e103338c324190c0e86f06e2fdcc886df42562c5d74a2216c8b2cc729d255686ec5488693569da6afc57a02af5e4ec5bd013c24b4fcddd94cc94eb412e88a20d
          cmd: <cmd here>
    type: object
  QuickSignRequest:
    description: completed transaction bytes to be signed
    required:
      - reqs
    properties:
      reqs:
        items:
          $ref: '#/definitions/CommandSigData'
        type: array
    type: object
  CommandSigData:
    description: the signature data for a command
    required:
      - sigs
      - cmd
    properties:
      sigs:
        items:
          - items:
              type: string
            type: array
          - items:
              - type: string
              - type: "null"
            type: array
        type: array
      cmd:
        type: string
    example:
      sigs:
        - - ae18efd16cbd49e9a92552a2589ac01491b486fbcbb1e3f07980f945597e2033
          - a8b9ea0fbe6b8f59917908bbd2ec473af4ba30c62e2cbab9981f7f5f62941cbb79aee832efc38675fac42a658192ba7387bbbc61017b2ca9b2f2115bc1f4c503
        - - fa781bdd858cd2380b5e2b654e58035f7189a6e8158686a1bb7eabb585a56e7f
          - null
      cmd: '{"networkId":"testnet04","payload":{"exec":{"data":null,"code":"(+ 1 2)"}},"signers":[{"pubKey":"ae18efd16cbd49e9a92552a2589ac01491b486fbcbb1e3f07980f945597e2033","clist":[{"args":[],"name":"coin.GAS"}]},{"pubKey":"fa781bdd858cd2380b5e2b654e58035f7189a6e8158686a1bb7eabb585a56e7f"}],"meta":{"creationTime":1663085494,"ttl":1800,"gasLimit":20,"chainId":"0","gasPrice":1.0e-6,"sender":"ae18efd16cbd49e9a92552a2589ac01491b486fbcbb1e3f07980f945597e2033"},"nonce":"2022-09-13 16:11:34.678231 UTC"}'
    type: object
